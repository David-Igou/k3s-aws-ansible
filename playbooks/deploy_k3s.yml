---
- hosts: k3s_master
  remote_user: ubuntu
  become: True
  gather_facts: True

  tasks:
#TODO NODE PREP. need go fix hostnames for aws
    - name: Install / upgrade k3s on master node
      shell: |
        curl -sfL https://get.k3s.io | \
        INSTALL_K3S_EXEC="server --bind-address 0.0.0.0 \
        --kube-apiserver-arg cloud-provider=external \
        --kube-apiserver-arg allow-privileged=true \
        --kube-apiserver-arg feature-gates=CSINodeInfo=true,CSIDriverRegistry=true,CSIBlockVolume=true,VolumeSnapshotDataSource=true \
        --kube-controller-arg cloud-provider=external \
        --kubelet-arg feature-gates=CSINodeInfo=true,CSIDriverRegistry=true,CSIBlockVolume=true \
        --disable-cloud-controller \
        --no-deploy local-path-provisioner" sh -
#      shell: "curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=\"server --bind-address 0.0.0.0 --kube-apiserver-arg cloud-provider=external --kube-controller-arg cloud-provider=external --disable-cloud-controller\" sh -"

    - name: Get token from master
      shell: "cat /var/lib/rancher/k3s/server/node-token"
      register: k3s_node_token

- hosts: k3s_worker
  remote_user: ubuntu
  become: True
  gather_facts: True

  tasks:
    - set_fact:
        k3s_master_host: "{{ groups['k3s_master'][0] }}"

    - set_fact:
        k3s_master_token: "{{ hostvars[k3s_master_host]['k3s_node_token'].stdout }}"

    - name: Install / upgrade k3s on worker nodes and connect to master
      shell: "curl -sfL https://get.k3s.io | K3S_URL=https://{{ groups['k3s_master'][0] }}:6443 K3S_TOKEN={{ k3s_master_token }} sh -"
